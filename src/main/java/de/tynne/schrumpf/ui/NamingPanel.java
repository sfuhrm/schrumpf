/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.tynne.schrumpf.ui;

import de.tynne.schrumpf.business.NamingBean;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JTextField;

/**
 *
 * @author Stephan Fuhrmann <stephan@tynne.de>
 */
public class NamingPanel extends javax.swing.JPanel {

    /**
     * Creates new form NamingPanel
     */
    public NamingPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jCheckBoxChange = new javax.swing.JCheckBox();
        jCheckBoxPrefix = new javax.swing.JCheckBox();
        jTextFieldPrefix = new javax.swing.JTextField();
        jCheckBoxSuffix = new javax.swing.JCheckBox();
        jTextFieldSuffix = new javax.swing.JTextField();
        jCheckBoxOverwrite = new javax.swing.JCheckBox();
        jPanelDirectory = new javax.swing.JPanel();
        jCheckBoxDirectory = new javax.swing.JCheckBox();
        jButtonChooseDirectory = new javax.swing.JButton();
        jLabelDirectory = new javax.swing.JLabel();
        jTextFieldDirectory = new javax.swing.JTextField();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/tynne/schrumpf/ui/NamingPanel"); // NOI18N
        setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("NamingPanel.border.title"))); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        jCheckBoxChange.setText(bundle.getString("NamingPanel.jCheckBoxChange.text")); // NOI18N
        jCheckBoxChange.setToolTipText(bundle.getString("NamingPanel.jCheckBoxChange.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jCheckBoxChange, gridBagConstraints);

        jCheckBoxPrefix.setText(bundle.getString("NamingPanel.jCheckBoxPrefix.text")); // NOI18N
        jCheckBoxPrefix.setToolTipText(bundle.getString("NamingPanel.jCheckBoxPrefix.toolTipText")); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxChange, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jCheckBoxPrefix, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        add(jCheckBoxPrefix, new java.awt.GridBagConstraints());

        jTextFieldPrefix.setText(bundle.getString("NamingPanel.jTextFieldPrefix.text")); // NOI18N
        jTextFieldPrefix.setToolTipText(bundle.getString("NamingPanel.jTextFieldPrefix.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxPrefix, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jTextFieldPrefix, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jTextFieldPrefix, gridBagConstraints);

        jCheckBoxSuffix.setText(bundle.getString("NamingPanel.jCheckBoxSuffix.text")); // NOI18N
        jCheckBoxSuffix.setToolTipText(bundle.getString("NamingPanel.jCheckBoxSuffix.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxChange, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jCheckBoxSuffix, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        add(jCheckBoxSuffix, new java.awt.GridBagConstraints());

        jTextFieldSuffix.setText(bundle.getString("NamingPanel.jTextFieldSuffix.text")); // NOI18N
        jTextFieldSuffix.setToolTipText(bundle.getString("NamingPanel.jTextFieldSuffix.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxSuffix, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jTextFieldSuffix, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jTextFieldSuffix, gridBagConstraints);

        jCheckBoxOverwrite.setText(bundle.getString("NamingPanel.jCheckBoxOverwrite.text")); // NOI18N
        jCheckBoxOverwrite.setToolTipText(bundle.getString("NamingPanel.jCheckBoxOverwrite.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jCheckBoxOverwrite, gridBagConstraints);

        jPanelDirectory.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("NamingPanel.jPanelDirectory.border.title"))); // NOI18N
        jPanelDirectory.setLayout(new java.awt.GridBagLayout());

        jCheckBoxDirectory.setText(bundle.getString("NamingPanel.jCheckBoxDirectory.text")); // NOI18N
        jCheckBoxDirectory.setToolTipText(bundle.getString("NamingPanel.jCheckBoxDirectory.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanelDirectory.add(jCheckBoxDirectory, gridBagConstraints);

        jButtonChooseDirectory.setText(bundle.getString("NamingPanel.jButtonChooseDirectory.text")); // NOI18N
        jButtonChooseDirectory.setToolTipText(bundle.getString("NamingPanel.jButtonChooseDirectory.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxDirectory, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jButtonChooseDirectory, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButtonChooseDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseDirectoryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanelDirectory.add(jButtonChooseDirectory, gridBagConstraints);

        jLabelDirectory.setText(bundle.getString("NamingPanel.jLabelDirectory.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        jPanelDirectory.add(jLabelDirectory, gridBagConstraints);

        jTextFieldDirectory.setText(bundle.getString("NamingPanel.jTextFieldDirectory.text")); // NOI18N
        jTextFieldDirectory.setToolTipText(bundle.getString("NamingPanel.jTextFieldDirectory.toolTipText")); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxDirectory, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jTextFieldDirectory, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanelDirectory.add(jTextFieldDirectory, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(jPanelDirectory, gridBagConstraints);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonChooseDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseDirectoryActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDragEnabled(true);
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            jTextFieldDirectory.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonChooseDirectoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonChooseDirectory;
    private javax.swing.JCheckBox jCheckBoxChange;
    private javax.swing.JCheckBox jCheckBoxDirectory;
    private javax.swing.JCheckBox jCheckBoxOverwrite;
    private javax.swing.JCheckBox jCheckBoxPrefix;
    private javax.swing.JCheckBox jCheckBoxSuffix;
    private javax.swing.JLabel jLabelDirectory;
    private javax.swing.JPanel jPanelDirectory;
    private javax.swing.JTextField jTextFieldDirectory;
    private javax.swing.JTextField jTextFieldPrefix;
    private javax.swing.JTextField jTextFieldSuffix;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public JCheckBox getjCheckBoxChange() {
        return jCheckBoxChange;
    }

    public JCheckBox getjCheckBoxDirectory() {
        return jCheckBoxDirectory;
    }

    public JCheckBox getjCheckBoxPrefix() {
        return jCheckBoxPrefix;
    }

    public JCheckBox getjCheckBoxSuffix() {
        return jCheckBoxSuffix;
    }

    public JTextField getjTextFieldDirectory() {
        return jTextFieldDirectory;
    }

    public JTextField getjTextFieldPrefix() {
        return jTextFieldPrefix;
    }

    public JTextField getjTextFieldSuffix() {
        return jTextFieldSuffix;
    }

    public JCheckBox getjCheckBoxOverwrite() {
        return jCheckBoxOverwrite;
    }

    public NamingBean toBean() {
        NamingBean bean = new NamingBean();
        bean.setChange(jCheckBoxChange.isSelected());
        bean.setHasDirectory(jCheckBoxDirectory.isSelected());
        bean.setDirectory(jTextFieldDirectory.getText());
        bean.setHasPrefix(jCheckBoxPrefix.isSelected());
        bean.setPrefix(jTextFieldPrefix.getText());
        bean.setHasSuffix(jCheckBoxSuffix.isSelected());
        bean.setSuffix(jTextFieldSuffix.getText());
        bean.setOverwrite(jCheckBoxOverwrite.isSelected());
        return bean;
    }
}
