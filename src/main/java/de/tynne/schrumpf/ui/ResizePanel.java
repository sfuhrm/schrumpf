/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package de.tynne.schrumpf.ui;

import de.tynne.schrumpf.business.ResizeBean;
import javax.swing.JCheckBox;
import javax.swing.JSpinner;

/**
 *
 * @author Stephan Fuhrmann <stephan@tynne.de>
 */
public class ResizePanel extends javax.swing.JPanel {

    /**
     * Creates new form ResizePanel
     */
    public ResizePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jCheckBoxChange = new javax.swing.JCheckBox();
        jLabelPreferredWidth = new javax.swing.JLabel();
        jSpinnerPreferredWidth = new javax.swing.JSpinner();
        jLabelPreferredHeight = new javax.swing.JLabel();
        jSpinnerPreferredHeight = new javax.swing.JSpinner();
        jLabelPresets = new javax.swing.JLabel();
        jComboBoxVideoStandardFormats = new javax.swing.JComboBox();
        jCheckBoxKeepAspect = new javax.swing.JCheckBox();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/tynne/schrumpf/ui/ResizePanel"); // NOI18N
        setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("ResizePanel.border.title"))); // NOI18N
        setName("Form"); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        jCheckBoxChange.setText(bundle.getString("ResizePanel.jCheckBoxChange.text")); // NOI18N
        jCheckBoxChange.setToolTipText(bundle.getString("ResizePanel.jCheckBoxChange.toolTipText")); // NOI18N
        jCheckBoxChange.setName("jCheckBoxChange"); // NOI18N
        jCheckBoxChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxChangeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jCheckBoxChange, gridBagConstraints);

        jLabelPreferredWidth.setText(bundle.getString("ResizePanel.jLabelPreferredWidth.text")); // NOI18N
        jLabelPreferredWidth.setName("jLabelPreferredWidth"); // NOI18N
        add(jLabelPreferredWidth, new java.awt.GridBagConstraints());

        jSpinnerPreferredWidth.setToolTipText(bundle.getString("ResizePanel.jSpinnerPreferredWidth.toolTipText")); // NOI18N
        jSpinnerPreferredWidth.setName("jSpinnerPreferredWidth"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxChange, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jSpinnerPreferredWidth, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jSpinnerPreferredWidth, gridBagConstraints);

        jLabelPreferredHeight.setText(bundle.getString("ResizePanel.jLabelPreferredHeight.text")); // NOI18N
        jLabelPreferredHeight.setName("jLabelPreferredHeight"); // NOI18N
        add(jLabelPreferredHeight, new java.awt.GridBagConstraints());

        jSpinnerPreferredHeight.setToolTipText(bundle.getString("ResizePanel.jSpinnerPreferredHeight.toolTipText")); // NOI18N
        jSpinnerPreferredHeight.setName("jSpinnerPreferredHeight"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxChange, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jSpinnerPreferredHeight, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(jSpinnerPreferredHeight, gridBagConstraints);

        jLabelPresets.setText(bundle.getString("ResizePanel.jLabelPresets.text")); // NOI18N
        jLabelPresets.setName("jLabelPresets"); // NOI18N
        add(jLabelPresets, new java.awt.GridBagConstraints());

        jComboBoxVideoStandardFormats.setModel(new javax.swing.DefaultComboBoxModel(VideoStandardFormat.values()));
        jComboBoxVideoStandardFormats.setToolTipText(bundle.getString("ResizePanel.jComboBoxVideoStandardFormats.toolTipText")); // NOI18N
        jComboBoxVideoStandardFormats.setName("jComboBoxVideoStandardFormats"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxChange, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jComboBoxVideoStandardFormats, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jComboBoxVideoStandardFormats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxVideoStandardFormatsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jComboBoxVideoStandardFormats, gridBagConstraints);

        jCheckBoxKeepAspect.setText(bundle.getString("ResizePanel.jCheckBoxKeepAspect.text")); // NOI18N
        jCheckBoxKeepAspect.setToolTipText(bundle.getString("ResizePanel.jCheckBoxKeepAspect.toolTipText")); // NOI18N
        jCheckBoxKeepAspect.setName("jCheckBoxKeepAspect"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jCheckBoxChange, org.jdesktop.beansbinding.ELProperty.create("${selected}"), jCheckBoxKeepAspect, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jCheckBoxKeepAspect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxKeepAspectActionPerformed(evt);
            }
        });
        add(jCheckBoxKeepAspect, new java.awt.GridBagConstraints());

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxKeepAspectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxKeepAspectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxKeepAspectActionPerformed

    private void jCheckBoxChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxChangeActionPerformed

    private void jComboBoxVideoStandardFormatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxVideoStandardFormatsActionPerformed
        VideoStandardFormat format = (VideoStandardFormat) jComboBoxVideoStandardFormats.getSelectedItem();
        if (format != null) {
            jSpinnerPreferredWidth.setValue(format.width());
            jSpinnerPreferredHeight.setValue(format.height());
        }
    }//GEN-LAST:event_jComboBoxVideoStandardFormatsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBoxChange;
    private javax.swing.JCheckBox jCheckBoxKeepAspect;
    private javax.swing.JComboBox jComboBoxVideoStandardFormats;
    private javax.swing.JLabel jLabelPreferredHeight;
    private javax.swing.JLabel jLabelPreferredWidth;
    private javax.swing.JLabel jLabelPresets;
    private javax.swing.JSpinner jSpinnerPreferredHeight;
    private javax.swing.JSpinner jSpinnerPreferredWidth;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public JCheckBox getjCheckBoxChange() {
        return jCheckBoxChange;
    }

    public JCheckBox getjCheckBoxKeepAspect() {
        return jCheckBoxKeepAspect;
    }

    public JSpinner getjSpinnerPreferredHeight() {
        return jSpinnerPreferredHeight;
    }

    public JSpinner getjSpinnerPreferredWidth() {
        return jSpinnerPreferredWidth;
    }

    public ResizeBean toBean() {
        ResizeBean bean = new ResizeBean();
        bean.setChange(jCheckBoxChange.isSelected());
        bean.setKeepAspect(jCheckBoxKeepAspect.isSelected());
        bean.setPreferredWidth((Integer)jSpinnerPreferredWidth.getValue());
        bean.setPreferredHeight((Integer)jSpinnerPreferredHeight.getValue());

        return bean;
    }

}
